Pos = 0;
        int actualSize = (int) (blockSize > len ? len : blockSize);
        for (int i = 0; i < size; i++) {
            beginPos = i * blockSize;
            if (i == size - 1) {//最后一块
                actualSize = (int) len;
            } else {
                actualSize = blockSize;
                len -= actualSize; //剩余量
            }
            splitDetail(i, beginPos, actualSize);
        }
    }
    /**
     * 指定第i块、起始位置、实际长度
     * @param i
     * @param beginPos
     * @param actualSize
     * @throws IOException
     */
    //分块思想：起始位置，读取大小
    private void splitDetail(int i ,int beginPos,int actualSize) throws IOException {
        RandomAccessFile raf = new RandomAccessFile(this.src, "r");
        RandomAccessFile raf2 = new RandomAccessFile(this.destPaths.get(i), "rw");
        //随机读取
        raf.seek(beginPos);
        //读取
        byte[] flush = new byte[1024];//缓冲容器
